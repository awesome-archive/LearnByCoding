#!/bin/sh

# Author: Rocky	
# Date:	2016-11-11

#create a new chain named SHADOWSOCKS
iptables -t nat -N SHADOWSOCKS

# Ignore your shadowsocks server's addresses
# It's very IMPORTANT, just be careful.

CONF='/etc/shadowsocks.json'
IP=`grep '"server"' $CONF | awk -F '"' '{print $4}'`

#在nat表SHADOWSOCKS链后加入一条规则,如果数据包的目的地是VPS的IP那么就跳出这条规则所在的链继续向下匹配,跟函数中的return用法类似
iptables -t nat -A SHADOWSOCKS -d $IP -j RETURN

#内网地址不走代理,酌情添加,不同公司不同路由设备使用的网段不同
iptables -t nat -A SHADOWSOCKS -d 0.0.0.0/8 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 10.0.0.0/8 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 127.0.0.0/8 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 169.254.0.0/16 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 172.16.0.0/12 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 172.100.100.0/24 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 172.100.101.0/24 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 172.100.102.0/24 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 172.100.108.0/24 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 192.168.0.0/16 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 224.0.0.0/4 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 240.0.0.0/4 -j RETURN

#创建大陆网段的ipset,创建之前先删除已存在的,不然会创建失败,当然第一次不用删除
ipset destroy chnset
ipset create chnset hash:net
for i in `cat /etc/chinadns_chnroute.txt`; do ipset add chnset $i ; done

#大陆网段不走代理,dst的意思是如果数据包的目的地是在ipset中就执行-j后面的规则,跳出这个链而继续匹配下面的规则
iptables -t nat -A SHADOWSOCKS -m set --match-set chnset dst -j RETURN

#其它的所有连接都重定向到本地ss-redir启动的透明代理端口
iptables -t nat -A SHADOWSOCKS -p tcp -j REDIRECT --to-ports 1080
#让上面的规则生效,也就是把上面新建的规则加入到PREROUTING链中
iptables -t nat -A PREROUTING -p tcp -j SHADOWSOCKS
