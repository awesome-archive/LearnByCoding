#本配置是按照64G内存来设计的.

[client]
port		= 3306
socket		= /home/test/mysql/mysql.sock
# utf8mb4是为了支持emoji表情
default-character-set = utf8mb4
# The MySQL server
[mysqld]
port        = 3306
socket      = /home/test/mysql/mysql.sock
# error log的日志级别
log-warnings  = 2
log-error = /home/test/mysql_master/log/mysql.err
pid-file  = /home/test/mysql_master/var/mysql.pid
basedir = /home/test/mysql_master/
datadir = /home/test/mysql_master/data/
#Whether queries that do not use indexes are logged to the slow query log
log-queries-not-using-indexes
#慢查询的阀值
long-query-time = 1
slow-query-log = 1
slow-query-log-file= /home/test/mysql_master/log/slow.log
tmpdir = /home/test/mysql_master/tmp/
#禁止把IP解析成HOST
skip-name-resolve
#不能使用连接文件
skip-symbolic-links
#每一个语句或事务往磁盘写入一次,这是最安全的配置,最多丢失一条记录,但这也是最慢的选择,除非使用SSD等,来加速.
sync_binlog=1
#它规定了内部内存临时表的最大值，每个线程都要分配。
#（实际起限制作用的是tmp_table_size和max_heap_table_size的最小值。）
#如果内存临时表超出了限制，MySQL就会自动地把它转化为基于磁盘的MyISAM表，存储在指定的tmpdir目录下
tmp_table_size  = 1024M
max_heap_table_size = 1024M
#buffer_size指定索引缓冲区的大小，它决定索引处理的速度，尤其是索引读的速度。
key_buffer_size = 1024M
#每个需要进行排序的线程分配该大小的一个缓冲区。增加这值加速ORDER BY或GROUP BY操作。
sort_buffer_size  = 2M
#MySql读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区，MySql会为它分配一段内存缓冲区。
read_buffer_size  = 2M
#联合查询操作所能使用的缓冲区大小,每个线程都会分配.
join_buffer_size  = 2M
#MySql的随机读缓冲区大小。当按任意顺序读取行时(例如，按照排序顺序)，将分配一个随机读缓存区。
read_rnd_buffer_size  = 2M
#批量插入缓冲大小
bulk_insert_buffer_size = 64M
#该值设置过小将导致单个记录超过限制后写入数据库失败，且后续记录写入也将失败
max_allowed_packet = 2M
#The number of open tables for all threads. Increasing this value increases the number of file descriptors thatmysqld requires.
table_open_cache = 64
# 每个客户端线程都与一个connection连接缓冲区和结果缓冲区相关联，默认值是16K。两者最初的大小都是net_buffer_length，但是根据需要会动态的扩大到max_allowed_packet设置的大小，结果缓冲区在每一个sql语句执行后都会缩小到设置的net_buffer_length。 
net_buffer_length = 8K
#myisam配置,一般用不到.默认引擎为innodb.
myisam_sort_buffer_size = 8M
myisam_sort_buffer_size = 64M
myisam_max_sort_file_size = 10G
myisam_repair_threads = 1
myisam_recover

max_connections = 1000

innodb_status_file
#InnoDB用于缓存数据、索引、锁、插入缓冲、数据字典等,如果是专用的DB服务器，且以InnoDB引擎为主的场景，通常可设置物理内存的50%,非专用的1/4左右.
innodb_buffer_pool_size = 10G
#InnoDB存储数据字典、内部数据结构的缓冲池，100M已经足够大了。
innodb_additional_mem_pool_size = 100M
innodb_data_home_dir  = /home/test/mysql/data/
#共享表空间初始化大小,10G,自动扩展.
innodb_data_file_path = ibdata1:10G:autoextend
innodb_file_io_threads  = 4
innodb_thread_concurrency = 16
#在每个事务提交时，日志缓冲被写到日志文件，对日志文件做到磁盘操作的刷新。
innodb_flush_log_at_trx_commit  = 1
innodb_log_buffer_size  = 8M
innodb_log_group_home_dir = /home/test/mysql/data/
innodb_log_file_size  = 256M
innodb_log_files_in_group = 2
innodb_max_dirty_pages_pct  = 90
innodb_lock_wait_timeout  = 50

#replication
#
#The name of the directory where the slave creates temporary files. This option is by default equal to the value of the tmpdir system variable
slave-load-tmpdir = /home/test/mysql_master/tmp/
# In replication setups, it can be useful to enable read_only on slave servers to ensure that slaves accept updates only from the master server and not from clients.
#read_only
#

#从库设置成非1
server-id   = 1 
#开启二进制日志并指定前缀名
log-bin=mysql-bin
#每个bin-log的最大大小,当此大小等于500M时会自动生成一个新的日志文件。一条记录不会写在2个日志文件中，所以有时日志文件会超过此大小。
max_binlog_size = 500M
#基于行的二进制记录
binlog_format=row
#从库开启二进制记录,主主架构必须开启,链式复制也得开启,须同时开启log-bin.
log-slave-updates 
#不复制某个表
replicate-wild-ignore-table=mysql.%
slave-skip-errors =1062
#从库连接主库超时时间,超过后会进行重试,重试次数会在做主从的时候定义change master to....
slave-net-timeout=3
#当slave从crash中恢复过来后自动从master获取bin log而不是使用损坏的.保证relay-log的完整.
relay_log_recovery=1
#自动删除n天前的binlog日志。默认为0不自动删除。
expire_logs_days=365


character-set-server = utf8mb4
init_connect = 'SET NAMES utf8mb4'
character-set-client-handshake = FALSE  
collation-server = utf8mb4_unicode_ci 


[mysqldump]
max_allowed_packet  = 32M

[mysql]
no-auto-rehash
max_allowed_packet  = 32M
default-character-set = utf8mb4

[myisamchk]
key_buffer_size = 20M
sort_buffer_size = 20M
read_buffer = 2M
write_buffer = 2M

[mysqlhotcopy]
interactive-timeout

